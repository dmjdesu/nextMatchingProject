openapi: 3.0.3
info:
  title: 案件マッチング API
  version: 1.0.0
  description: Django REST Framework + drf_spectacular で構築するマッチングサイト API
paths:
  /api/applications/:
    get:
      operationId: applications_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - applications
      security:
      - jwtAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
          description: ''
    post:
      operationId: applications_create
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /api/applications/{id}/:
    get:
      operationId: applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      security:
      - jwtAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    put:
      operationId: applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    patch:
      operationId: applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    delete:
      operationId: applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/gigs/:
    get:
      operationId: gigs_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - gigs
      security:
      - jwtAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gig'
          description: ''
    post:
      operationId: gigs_create
      tags:
      - gigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Gig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Gig'
        required: true
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
  /api/gigs/{id}/:
    get:
      operationId: gigs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigs
      security:
      - jwtAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
    put:
      operationId: gigs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Gig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Gig'
        required: true
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
    patch:
      operationId: gigs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGig'
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gig'
          description: ''
    delete:
      operationId: gigs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this gig.
        required: true
      tags:
      - gigs
      security:
      - jwtAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Application:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        applied_at:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          maxLength: 20
        user:
          type: integer
        gig:
          type: integer
      required:
      - applied_at
      - gig
      - id
      - user
    Gig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        budget:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        deadline:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - budget
      - created_at
      - deadline
      - description
      - id
      - title
    PatchedApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        applied_at:
          type: string
          format: date-time
          readOnly: true
        status:
          type: string
          maxLength: 20
        user:
          type: integer
        gig:
          type: integer
    PatchedGig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        budget:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        deadline:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
          readOnly: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
